name: Regression Test

on:
  push:
    branches: [develop, master]
  pull_request:

jobs:
  test:
    name: TROVE ${{ matrix.os }} - ${{ matrix.arch }} - ${{ matrix.compiler }}
    env:
      OMP_NUM_THREADS: 1
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04 # Required for intel-mkl
        arch:
          - x64
        compiler:
          - gfortran
          - intel
    steps:
      - uses: actions/checkout@v2

      #- name: Cache benchmark data
        #uses: actions/cache@v2
        #env:
          #cache-name: benchmark-data
        #with:
          #path: test/benchmarks
          #key: benchmark-data

      - name: Setup Intel compiler and MPI
        if: ${{ matrix.compiler  == 'intel' }}
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
          echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/oneAPI.list" -o APT::Get::List-Cleanup="0"
          sudo apt-get install -y intel-oneapi-compiler-fortran
          source /opt/intel/oneapi/compiler/latest/env/vars.sh
          source /opt/intel/oneapi/setvars.sh

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: '3.9'
          architecture: x64

      - name: Install Intel MKL
        run: sudo apt-get install -y intel-mkl

      - name: Build
        run: |
          ${{ matrix.compiler }} --version
          make COMPILER=${{ matrix.compiler }} MODE=ci

      - name: Test
        run: make test
